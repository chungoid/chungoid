{
  "chroma_list_collections": {
    "tool_name": "chroma_list_collections",
    "display_name": "ChromaDB List Collections",
    "description": "List and enumerate all ChromaDB collections with project context awareness",
    "category": "database",
    "capabilities": [
      {
        "name": "collection_enumeration",
        "description": "List all available collections with metadata",
        "input_types": [
          "project_path",
          "project_id"
        ],
        "output_types": [
          "collection_list",
          "count",
          "metadata"
        ],
        "examples": [
          "List all collections in project",
          "Get collection overview"
        ],
        "prerequisites": []
      },
      {
        "name": "project_filtering",
        "description": "Filter collections by project context",
        "input_types": [
          "project_filter"
        ],
        "output_types": [
          "filtered_collections"
        ],
        "examples": [
          "Show project-specific collections"
        ],
        "prerequisites": []
      }
    ],
    "usage_patterns": [
      {
        "pattern_name": "project_discovery",
        "description": "Discover available collections in project",
        "tool_sequence": [
          "chroma_list_collections",
          "chroma_get_collection_info"
        ],
        "use_cases": [
          "Project initialization",
          "Data exploration"
        ],
        "success_rate": 95.0,
        "avg_execution_time": 0.0,
        "complexity": "simple"
      }
    ],
    "metrics": {
      "total_executions": 0,
      "successful_executions": 0,
      "failed_executions": 0,
      "avg_execution_time": 0.0,
      "last_used": null,
      "error_patterns": []
    },
    "dependencies": [],
    "related_tools": [],
    "tags": [
      "chromadb",
      "collections",
      "discovery",
      "project-aware"
    ],
    "complexity": "simple",
    "project_aware": true,
    "security_level": "safe"
  },
  "chroma_create_collection": {
    "tool_name": "chroma_create_collection",
    "display_name": "ChromaDB Create Collection",
    "description": "Create new ChromaDB collections with embedding functions and project context",
    "category": "database",
    "capabilities": [
      {
        "name": "collection_creation",
        "description": "Create collections with custom configurations",
        "input_types": [
          "collection_name",
          "embedding_function",
          "metadata"
        ],
        "output_types": [
          "collection_info",
          "success_status"
        ],
        "examples": [
          "Create project-specific collection",
          "Set up embedding space"
        ],
        "prerequisites": []
      },
      {
        "name": "embedding_configuration",
        "description": "Configure embedding functions and dimensions",
        "input_types": [
          "embedding_type",
          "dimensions"
        ],
        "output_types": [
          "embedding_config"
        ],
        "examples": [
          "Set up sentence transformers",
          "Configure OpenAI embeddings"
        ],
        "prerequisites": []
      }
    ],
    "usage_patterns": [
      {
        "pattern_name": "project_setup",
        "description": "Initialize ChromaDB for new project",
        "tool_sequence": [
          "chroma_create_collection",
          "chroma_set_project_context"
        ],
        "use_cases": [
          "Project initialization",
          "Knowledge base setup"
        ],
        "success_rate": 92.0,
        "avg_execution_time": 0.0,
        "complexity": "moderate"
      }
    ],
    "metrics": {
      "total_executions": 0,
      "successful_executions": 0,
      "failed_executions": 0,
      "avg_execution_time": 0.0,
      "last_used": null,
      "error_patterns": []
    },
    "dependencies": [],
    "related_tools": [],
    "tags": [
      "chromadb",
      "creation",
      "embedding",
      "project-setup"
    ],
    "complexity": "moderate",
    "project_aware": true,
    "security_level": "standard"
  },
  "chromadb_query_collection": {
    "tool_name": "chromadb_query_collection",
    "display_name": "ChromaDB Query Collection",
    "description": "Semantic search and query operations with advanced filtering",
    "category": "database",
    "capabilities": [
      {
        "name": "semantic_search",
        "description": "Perform semantic similarity search",
        "input_types": [
          "query_text",
          "collection_name",
          "filters"
        ],
        "output_types": [
          "search_results",
          "similarity_scores"
        ],
        "examples": [
          "Find similar documents",
          "Semantic code search"
        ],
        "prerequisites": []
      },
      {
        "name": "metadata_filtering",
        "description": "Filter results by metadata criteria",
        "input_types": [
          "metadata_filters",
          "where_conditions"
        ],
        "output_types": [
          "filtered_results"
        ],
        "examples": [
          "Filter by project",
          "Filter by date range"
        ],
        "prerequisites": []
      }
    ],
    "usage_patterns": [
      {
        "pattern_name": "knowledge_retrieval",
        "description": "Retrieve relevant knowledge for tasks",
        "tool_sequence": [
          "chromadb_query_collection",
          "chromadb_reflection_query"
        ],
        "use_cases": [
          "Context gathering",
          "Similar problem lookup"
        ],
        "success_rate": 88.0,
        "avg_execution_time": 0.0,
        "complexity": "moderate"
      }
    ],
    "metrics": {
      "total_executions": 0,
      "successful_executions": 0,
      "failed_executions": 0,
      "avg_execution_time": 0.0,
      "last_used": null,
      "error_patterns": []
    },
    "dependencies": [],
    "related_tools": [],
    "tags": [
      "chromadb",
      "search",
      "semantic",
      "retrieval"
    ],
    "complexity": "moderate",
    "project_aware": true,
    "security_level": "safe"
  },
  "chromadb_reflection_query": {
    "tool_name": "chromadb_reflection_query",
    "display_name": "ChromaDB Reflection Query",
    "description": "Specialized queries for learning and reflection data",
    "category": "database",
    "capabilities": [
      {
        "name": "reflection_search",
        "description": "Search agent reflections and learning data",
        "input_types": [
          "reflection_type",
          "agent_name",
          "timeframe"
        ],
        "output_types": [
          "reflection_results",
          "patterns"
        ],
        "examples": [
          "Find similar failures",
          "Get agent learnings"
        ],
        "prerequisites": []
      },
      {
        "name": "pattern_analysis",
        "description": "Analyze patterns in reflection data",
        "input_types": [
          "pattern_type",
          "analysis_scope"
        ],
        "output_types": [
          "pattern_insights",
          "trends"
        ],
        "examples": [
          "Identify failure patterns",
          "Success trend analysis"
        ],
        "prerequisites": []
      }
    ],
    "usage_patterns": [
      {
        "pattern_name": "failure_analysis",
        "description": "Analyze past failures for insights",
        "tool_sequence": [
          "chromadb_reflection_query",
          "chromadb_query_collection"
        ],
        "use_cases": [
          "Debugging",
          "Pattern recognition",
          "Learning"
        ],
        "success_rate": 85.0,
        "avg_execution_time": 0.0,
        "complexity": "complex"
      }
    ],
    "metrics": {
      "total_executions": 0,
      "successful_executions": 0,
      "failed_executions": 0,
      "avg_execution_time": 0.0,
      "last_used": null,
      "error_patterns": []
    },
    "dependencies": [],
    "related_tools": [],
    "tags": [
      "chromadb",
      "reflection",
      "learning",
      "analysis"
    ],
    "complexity": "complex",
    "project_aware": true,
    "security_level": "safe"
  },
  "filesystem_read_file": {
    "tool_name": "filesystem_read_file",
    "display_name": "Filesystem Read File",
    "description": "Smart file reading with encoding detection and validation",
    "category": "filesystem",
    "capabilities": [
      {
        "name": "smart_file_reading",
        "description": "Read files with automatic encoding detection",
        "input_types": [
          "file_path",
          "encoding_hint"
        ],
        "output_types": [
          "file_content",
          "encoding_info"
        ],
        "examples": [
          "Read source code files",
          "Read configuration files"
        ],
        "prerequisites": []
      },
      {
        "name": "content_validation",
        "description": "Validate file content and structure",
        "input_types": [
          "validation_rules"
        ],
        "output_types": [
          "validation_results"
        ],
        "examples": [
          "Validate JSON/YAML",
          "Check file integrity"
        ],
        "prerequisites": []
      }
    ],
    "usage_patterns": [
      {
        "pattern_name": "code_analysis",
        "description": "Read and analyze source code files",
        "tool_sequence": [
          "filesystem_read_file",
          "filesystem_project_scan"
        ],
        "use_cases": [
          "Code review",
          "Dependency analysis"
        ],
        "success_rate": 98.0,
        "avg_execution_time": 0.0,
        "complexity": "simple"
      }
    ],
    "metrics": {
      "total_executions": 0,
      "successful_executions": 0,
      "failed_executions": 0,
      "avg_execution_time": 0.0,
      "last_used": null,
      "error_patterns": []
    },
    "dependencies": [],
    "related_tools": [],
    "tags": [
      "filesystem",
      "reading",
      "encoding",
      "validation"
    ],
    "complexity": "simple",
    "project_aware": true,
    "security_level": "safe"
  },
  "filesystem_project_scan": {
    "tool_name": "filesystem_project_scan",
    "display_name": "Filesystem Project Scan",
    "description": "Project-aware scanning with type detection and analysis",
    "category": "filesystem",
    "capabilities": [
      {
        "name": "project_discovery",
        "description": "Scan and analyze project structure",
        "input_types": [
          "project_path",
          "scan_depth"
        ],
        "output_types": [
          "project_structure",
          "file_analysis"
        ],
        "examples": [
          "Discover project type",
          "Map codebase structure"
        ],
        "prerequisites": []
      },
      {
        "name": "intelligent_filtering",
        "description": "Smart filtering of relevant files",
        "input_types": [
          "filter_patterns",
          "exclusions"
        ],
        "output_types": [
          "filtered_results"
        ],
        "examples": [
          "Find source files",
          "Skip build artifacts"
        ],
        "prerequisites": []
      }
    ],
    "usage_patterns": [
      {
        "pattern_name": "project_analysis",
        "description": "Comprehensive project structure analysis",
        "tool_sequence": [
          "filesystem_project_scan",
          "filesystem_read_file"
        ],
        "use_cases": [
          "Project onboarding",
          "Codebase understanding"
        ],
        "success_rate": 94.0,
        "avg_execution_time": 0.0,
        "complexity": "moderate"
      }
    ],
    "metrics": {
      "total_executions": 0,
      "successful_executions": 0,
      "failed_executions": 0,
      "avg_execution_time": 0.0,
      "last_used": null,
      "error_patterns": []
    },
    "dependencies": [],
    "related_tools": [],
    "tags": [
      "filesystem",
      "project",
      "scanning",
      "analysis"
    ],
    "complexity": "moderate",
    "project_aware": true,
    "security_level": "safe"
  },
  "filesystem_batch_operations": {
    "tool_name": "filesystem_batch_operations",
    "display_name": "Filesystem Batch Operations",
    "description": "Efficient bulk file operations with atomic semantics",
    "category": "filesystem",
    "capabilities": [
      {
        "name": "atomic_operations",
        "description": "Perform multiple file operations atomically",
        "input_types": [
          "operation_list",
          "transaction_mode"
        ],
        "output_types": [
          "operation_results",
          "rollback_info"
        ],
        "examples": [
          "Bulk file processing",
          "Safe batch updates"
        ],
        "prerequisites": []
      },
      {
        "name": "progress_tracking",
        "description": "Track progress of batch operations",
        "input_types": [
          "progress_callback"
        ],
        "output_types": [
          "progress_updates"
        ],
        "examples": [
          "Monitor large operations",
          "Progress reporting"
        ],
        "prerequisites": []
      }
    ],
    "usage_patterns": [
      {
        "pattern_name": "bulk_processing",
        "description": "Process multiple files efficiently",
        "tool_sequence": [
          "filesystem_project_scan",
          "filesystem_batch_operations"
        ],
        "use_cases": [
          "Code refactoring",
          "Mass file updates"
        ],
        "success_rate": 89.0,
        "avg_execution_time": 0.0,
        "complexity": "complex"
      }
    ],
    "metrics": {
      "total_executions": 0,
      "successful_executions": 0,
      "failed_executions": 0,
      "avg_execution_time": 0.0,
      "last_used": null,
      "error_patterns": []
    },
    "dependencies": [],
    "related_tools": [],
    "tags": [
      "filesystem",
      "batch",
      "atomic",
      "bulk"
    ],
    "complexity": "complex",
    "project_aware": true,
    "security_level": "standard"
  },
  "tool_run_terminal_command": {
    "tool_name": "tool_run_terminal_command",
    "display_name": "Enhanced Terminal Command",
    "description": "Secure terminal execution with sandboxing and risk assessment",
    "category": "terminal",
    "capabilities": [
      {
        "name": "secure_execution",
        "description": "Execute commands with security controls",
        "input_types": [
          "command",
          "security_level",
          "sandbox_config"
        ],
        "output_types": [
          "execution_result",
          "security_info"
        ],
        "examples": [
          "Run build commands",
          "Execute tests safely"
        ],
        "prerequisites": []
      },
      {
        "name": "risk_assessment",
        "description": "Classify command risk before execution",
        "input_types": [
          "command_text"
        ],
        "output_types": [
          "risk_classification",
          "recommendations"
        ],
        "examples": [
          "Assess command safety",
          "Security recommendations"
        ],
        "prerequisites": []
      },
      {
        "name": "resource_monitoring",
        "description": "Monitor execution resources and performance",
        "input_types": [
          "monitoring_config"
        ],
        "output_types": [
          "resource_usage",
          "performance_metrics"
        ],
        "examples": [
          "Track CPU/memory usage",
          "Monitor execution time"
        ],
        "prerequisites": []
      }
    ],
    "usage_patterns": [
      {
        "pattern_name": "safe_development",
        "description": "Secure development command execution",
        "tool_sequence": [
          "terminal_classify_command",
          "tool_run_terminal_command"
        ],
        "use_cases": [
          "Build automation",
          "Testing",
          "Package management"
        ],
        "success_rate": 91.0,
        "avg_execution_time": 0.0,
        "complexity": "moderate"
      }
    ],
    "metrics": {
      "total_executions": 0,
      "successful_executions": 0,
      "failed_executions": 0,
      "avg_execution_time": 0.0,
      "last_used": null,
      "error_patterns": []
    },
    "dependencies": [],
    "related_tools": [],
    "tags": [
      "terminal",
      "security",
      "execution",
      "monitoring"
    ],
    "complexity": "moderate",
    "project_aware": true,
    "security_level": "standard"
  },
  "terminal_classify_command": {
    "tool_name": "terminal_classify_command",
    "display_name": "Terminal Command Classifier",
    "description": "Risk assessment and security classification for commands",
    "category": "terminal",
    "capabilities": [
      {
        "name": "security_classification",
        "description": "Classify commands by security risk level",
        "input_types": [
          "command_text"
        ],
        "output_types": [
          "risk_level",
          "risk_factors"
        ],
        "examples": [
          "Assess rm command risk",
          "Evaluate sudo usage"
        ],
        "prerequisites": []
      },
      {
        "name": "pattern_matching",
        "description": "Match commands against security patterns",
        "input_types": [
          "command_patterns"
        ],
        "output_types": [
          "pattern_matches",
          "security_advice"
        ],
        "examples": [
          "Detect dangerous patterns",
          "Security recommendations"
        ],
        "prerequisites": []
      }
    ],
    "usage_patterns": [
      {
        "pattern_name": "pre_execution_check",
        "description": "Security check before command execution",
        "tool_sequence": [
          "terminal_classify_command",
          "terminal_check_permissions"
        ],
        "use_cases": [
          "Command validation",
          "Security enforcement"
        ],
        "success_rate": 96.0,
        "avg_execution_time": 0.0,
        "complexity": "simple"
      }
    ],
    "metrics": {
      "total_executions": 0,
      "successful_executions": 0,
      "failed_executions": 0,
      "avg_execution_time": 0.0,
      "last_used": null,
      "error_patterns": []
    },
    "dependencies": [],
    "related_tools": [],
    "tags": [
      "terminal",
      "security",
      "classification",
      "risk"
    ],
    "complexity": "simple",
    "project_aware": true,
    "security_level": "safe"
  },
  "tool_fetch_web_content": {
    "tool_name": "tool_fetch_web_content",
    "display_name": "Web Content Fetcher",
    "description": "Intelligent web content fetching with summarization and validation",
    "category": "content",
    "capabilities": [
      {
        "name": "intelligent_fetching",
        "description": "Fetch web content with context awareness",
        "input_types": [
          "url",
          "fetch_options"
        ],
        "output_types": [
          "web_content",
          "metadata"
        ],
        "examples": [
          "Fetch documentation",
          "Get API references"
        ],
        "prerequisites": []
      },
      {
        "name": "content_processing",
        "description": "Process and clean web content",
        "input_types": [
          "raw_content",
          "processing_options"
        ],
        "output_types": [
          "processed_content",
          "extraction_info"
        ],
        "examples": [
          "Extract main content",
          "Remove navigation"
        ],
        "prerequisites": []
      }
    ],
    "usage_patterns": [
      {
        "pattern_name": "research_assistance",
        "description": "Research and gather information from web sources",
        "tool_sequence": [
          "tool_fetch_web_content",
          "web_content_summarize"
        ],
        "use_cases": [
          "Problem research",
          "Documentation lookup"
        ],
        "success_rate": 87.0,
        "avg_execution_time": 0.0,
        "complexity": "moderate"
      }
    ],
    "metrics": {
      "total_executions": 0,
      "successful_executions": 0,
      "failed_executions": 0,
      "avg_execution_time": 0.0,
      "last_used": null,
      "error_patterns": []
    },
    "dependencies": [],
    "related_tools": [],
    "tags": [
      "content",
      "web",
      "fetching",
      "research"
    ],
    "complexity": "moderate",
    "project_aware": true,
    "security_level": "standard"
  },
  "mcptool_get_named_content": {
    "tool_name": "mcptool_get_named_content",
    "display_name": "Dynamic Content Generator",
    "description": "Dynamic content generation with caching and version management",
    "category": "content",
    "capabilities": [
      {
        "name": "dynamic_generation",
        "description": "Generate content dynamically based on context",
        "input_types": [
          "content_name",
          "context",
          "template"
        ],
        "output_types": [
          "generated_content",
          "version_info"
        ],
        "examples": [
          "Generate code templates",
          "Create documentation"
        ],
        "prerequisites": []
      },
      {
        "name": "caching_system",
        "description": "Cache generated content for reuse",
        "input_types": [
          "cache_key",
          "cache_options"
        ],
        "output_types": [
          "cache_status",
          "cached_content"
        ],
        "examples": [
          "Cache templates",
          "Reuse generated content"
        ],
        "prerequisites": []
      }
    ],
    "usage_patterns": [
      {
        "pattern_name": "template_workflow",
        "description": "Template-based content generation workflow",
        "tool_sequence": [
          "mcptool_get_named_content",
          "content_generate_dynamic"
        ],
        "use_cases": [
          "Code generation",
          "Documentation creation"
        ],
        "success_rate": 84.0,
        "avg_execution_time": 0.0,
        "complexity": "moderate"
      }
    ],
    "metrics": {
      "total_executions": 0,
      "successful_executions": 0,
      "failed_executions": 0,
      "avg_execution_time": 0.0,
      "last_used": null,
      "error_patterns": []
    },
    "dependencies": [],
    "related_tools": [],
    "tags": [
      "content",
      "generation",
      "templates",
      "caching"
    ],
    "complexity": "moderate",
    "project_aware": true,
    "security_level": "safe"
  }
}