from __future__ import annotations

from typing import Any, Dict, Optional
from pydantic import BaseModel, Field

class MockHumanInputAgentInput(BaseModel):
    prompt_message_for_user: str = Field(..., description="The prompt message that would be shown to a human user.")
    target_context_path: Optional[str] = Field(None, description="Suggested path in context for the output. Mock may ignore this.")
    # Other fields from the planner's 'inputs' for this stage can be added if needed

class MockHumanInputAgentOutput(BaseModel):
    specification_output: Dict[str, Any] = Field(..., description="The mock specification data generated by the agent.")
    notes: str = Field(default="MockHumanInputAgent provided a predefined specification.", description="Notes from the agent execution.") 